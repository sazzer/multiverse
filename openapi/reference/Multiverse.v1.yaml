openapi: 3.0.3
info:
  title: Multiverse
  version: '1.0'
  contact:
    name: Graham Cox
    email: graham@grahamcox.co.uk
  description: World building service
servers:
  - url: 'http://localhost:8000'
    description: Development
  - url: 'https://multiverse-cd.herokuapp.com'
    description: CD
tags:
  - name: health
    description: APIs for healthchecks
  - name: users
    description: APIs for working with Users
paths:
  /health:
    get:
      summary: Check the health of the system
      tags:
        - health
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Healthcheck'
              examples:
                Healthy:
                  value:
                    components:
                      db:
                        healthy: true
                    healthy: true
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Healthcheck'
      operationId: get-health
      description: Check the health of the system
  '/usernames/{username}':
    get:
      summary: Check if a username exists
      tags:
        - users
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem-Response'
              examples:
                Unknown Username:
                  value:
                    status: 404
                    title: The requested username was unknown
                    type: 'tag:multiverse,2020:users/problems/unknown_username'
      operationId: get-usernames
      description: Check if a username is already registered.
    parameters:
      - schema:
          type: string
          minLength: 1
        name: username
        in: path
        required: true
        description: The username to look up
components:
  schemas:
    Problem-Response:
      title: Problem-Response
      type: object
      description: A Problem as defined in RFC-7807
      properties:
        type:
          type: string
          format: uri
          minLength: 1
        title:
          type: string
          minLength: 1
        status:
          type: integer
          minimum: 100
          maximum: 599
        detail:
          type: string
        instance:
          type: string
      required:
        - type
        - title
        - status
    Healthcheck:
      title: Healthcheck
      type: object
      properties:
        healthy:
          type: boolean
        components:
          type: object
          required:
            - ''
          patternProperties:
            ^.+$:
              type: object
              required:
                - healthy
              properties:
                healthy:
                  type: boolean
                message:
                  type: string
      required:
        - healthy
        - components
