name: CI

on: [push]

jobs:
  build-service:
    runs-on: ubuntu-latest
    env:
      RUST_LOG: "debug"
      RUST_BACKTRACE: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('service/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: cargo-index-${{ runner.os }}-${{ hashFiles('service/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: service/target
          key: cargo-build-target-${{ runner.os }}-${{ hashFiles('service/Cargo.lock') }}

      - name: Cargo Check
        working-directory: service
        run: cargo check

      - name: Cargo Clippy
        working-directory: service
        run: cargo clippy --lib --all-features -- -D clippy::pedantic

      - name: Cargo Test
        working-directory: service
        run: cargo test

  build-service-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get the git tag
        run: |
          echo ::set-env name=GIT_TAG::$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g")

      - uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: docker.pkg.github.com
          username: "publisher"
          password: "${{ secrets.GITHUB_TOKEN }}"
          image_name: "${{ format('{0}/multiverse-service', github.repository) }}"
          image_tag: "${{ env.GIT_TAG }}"
          push_git_tag: true
          context: service

  build-webapp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: webapp/node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('webapp/yarn.lock') }}

      - name: Install dependencies
        working-directory: webapp
        run: yarn install

      - name: Run tests
        working-directory: webapp
        run: yarn test

      - name: Build output
        working-directory: webapp
        run: yarn build

      - name: Upload build output
        uses: actions/upload-artifact@v1
        with:
          name: webapp
          path: webapp/build

  build-webapp-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get the git tag
        run: |
          echo ::set-env name=GIT_TAG::$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g")

      - uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: docker.pkg.github.com
          username: "publisher"
          password: "${{ secrets.GITHUB_TOKEN }}"
          image_name: "${{ format('{0}/multiverse-webapp', github.repository) }}"
          image_tag: "${{ env.GIT_TAG }}"
          push_git_tag: true
          context: webapp

  e2e:
    runs-on: ubuntu-latest
    needs:
      - build-service
      - build-service-container
      - build-webapp
      - build-webapp-container
    env:
      KUBE_NS: multivere-e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the git tag
        run: |
          echo ::set-env name=GIT_TAG::$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g")

      - name: Docker login
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN

      - name: Pull Containers
        run: |
          docker pull docker.pkg.github.com/${{ format('{0}/multiverse-service', github.repository) }}:${{ env.GIT_TAG }}
          docker pull docker.pkg.github.com/${{ format('{0}/multiverse-webapp', github.repository) }}:${{ env.GIT_TAG }}
          docker tag docker.pkg.github.com/${{ format('{0}/multiverse-service', github.repository) }}:${{ env.GIT_TAG }} multiverse-service:latest
          docker tag docker.pkg.github.com/${{ format('{0}/multiverse-webapp', github.repository) }}:${{ env.GIT_TAG }} multiverse-webapp:latest

      - name: Start Services
        working-directory: e2e
        run: docker-compose up -d

      - name: Run Tests
        uses: cypress-io/github-action@v1
        with:
          browser: chrome
          working-directory: e2e
          wait-on: "http://localhost:8000/health"

      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress
          path: e2e/output

  deploy-service-container:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs:
      - e2e
    steps:
      - name: Get the git tag
        run: |
          echo ::set-env name=GIT_TAG::$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g")

      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Docker login
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN

      - name: Push container
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          docker pull docker.pkg.github.com/${{ format('{0}/multiverse-service', github.repository) }}:${{ env.GIT_TAG }}
          docker tag docker.pkg.github.com/${{ format('{0}/multiverse-service', github.repository) }}:${{ env.GIT_TAG }} registry.heroku.com/multiverse-cd/web
          docker push registry.heroku.com/multiverse-cd/web

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a multiverse-cd web

  deploy-webapp:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs:
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"

      - name: Install dependencies
        working-directory: webapp
        run: yarn add react-env

      - uses: actions/download-artifact@v2
        with:
          name: webapp
          path: webapp/build

      - name: Set up runtime environment
        working-directory: webapp
        env:
          REACT_APP_URL_BASE: "https://multiverse-cd.herokuapp.com"
          NODE_ENV: production
        run: |
          npx react-env --dest build
          find build

      - uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: "Prod deploy: ${{ github.ref }}"
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: webapp/build
